<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.crabapples.system.sysMenu.dao.mybatis.mapper.MenusMapper">
    <resultMap id="sysMenus" type="cn.crabapples.system.sysMenu.entity.SysMenu">
        <id property="id" column="id"/>
        <result property="pid" column="pid"/>
        <result property="sort" column="sort"/>
        <result property="icon" column="icon"/>
        <result property="name" column="name"/>
        <result property="link" column="link"/>
        <result property="menusType" column="menus_type"/>
        <result property="path" column="path"/>
        <result property="filePath" column="file_path"/>
        <result property="permission" column="permission"/>
        <result property="path" column="path"/>
        <result property="showFlag" column="show_flag"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="delFlag" column="del_flag"/>
        <collection property="children" ofType="cn.crabapples.system.sysMenu.entity.SysMenu"
                    select="findMenusTree" column="{id=id}"/>
    </resultMap>
    <!--        <collection property="children" ofType="cn.crabapples.system.sysMenu.entity.SysMenu" resultMap="sysMenus"/>-->

    <!--递归查询菜单树-->
    <select id="findMenusTree" resultMap="sysMenus">
        select *
        from sys_menu
        where del_flag = 0
        <choose>
            <when test="id == null">
                and pid is null
            </when>
            <otherwise>
                and pid = #{id}
            </otherwise>
        </choose>
        order by sort asc
    </select>

    <select id="findMenusTreePage" resultMap="sysMenus">
        select *
        from sys_menu
        where del_flag = 0
        <choose>
            <when test="id == null">
                and pid is null
            </when>
            <otherwise>
                and pid = #{id}
            </otherwise>
        </choose>
    </select>

    <select id="findMenusTreePage_COUNT" resultType="long">
        select count(1)
        from sys_menu
        where del_flag = 0
        <choose>
            <when test="id == null">
                and pid is null
            </when>
            <otherwise>
                and pid = #{id}
            </otherwise>
        </choose>
    </select>

    <select id="findMenusTree1" resultMap="sysMenus">
        with recursive menusTree as (select *
                                     from sys_menu
                                     where pid is null
                                     union all
                                     select node.*
                                     from sys_menu as node
                                              inner join menusTree as root on node.pid = root.id)
        select *
        from menusTree;
    </select>

    <select id="getUserMenus" resultType="cn.crabapples.system.sysMenu.entity.SysMenu">
        select distinct sys_menu.*
        from sys_user
                 INNER join sys_user_roles on sys_user.id = sys_user_roles.user_id
                 INNER JOIN sys_role_menus on sys_role_menus.role_id = sys_user_roles.role_id
                 INNER JOIN sys_menu on sys_menu.id = sys_role_menus.menu_id
        where sys_user.id = #{userId}
    </select>

</mapper>
